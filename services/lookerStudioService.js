// services/lookerStudioService.js - ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
const config = require('../config/config');
const googleSheetsService = require('./googleSheets');

class LookerStudioService {
  constructor() {
    this.dashboardUrl = config.LOOKER_STUDIO_DASHBOARD_URL;
    this.embedUrl = config.LOOKER_STUDIO_EMBED_URL;
    this.isEnabled = config.ENABLE_LOOKER_INTEGRATION;
  }

  /**
   * ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dashboard ‡∏û‡∏£‡πâ‡∏≠‡∏° filter parameters
   */
  createDashboardUrl(filters = {}) {
    if (!this.isEnabled || !this.dashboardUrl) {
      return null;
    }

    let url = this.dashboardUrl;
    const params = new URLSearchParams();

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° filters ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (filters.dateFrom) {
      params.append('config', JSON.stringify({
        'df146': `${filters.dateFrom}`,
        'df147': `${filters.dateTo || filters.dateFrom}`
      }));
    }

    if (filters.status) {
      params.append('filter', `status:${filters.status}`);
    }

    if (filters.requestId) {
      params.append('filter', `request_id:${filters.requestId}`);
    }

    if (params.toString()) {
      url += (url.includes('?') ? '&' : '?') + params.toString();
    }

    return url;
  }

  /**
   * ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Embed Dashboard
   */
  createEmbedUrl(filters = {}) {
    if (!this.isEnabled || !this.embedUrl) {
      return this.createDashboardUrl(filters);
    }

    let url = this.embedUrl;
    const params = new URLSearchParams();

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö embed
    params.append('embed', 'true');
    params.append('theme', 'light');
    params.append('chrome', 'false'); // ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô navigation ‡∏Ç‡∏≠‡∏á Looker Studio

    if (filters.dateFrom) {
      params.append('config', JSON.stringify({
        'df146': `${filters.dateFrom}`,
        'df147': `${filters.dateTo || filters.dateFrom}`
      }));
    }

    if (filters.status) {
      params.append('filter', `status:${filters.status}`);
    }

    if (filters.requestId) {
      params.append('filter', `request_id:${filters.requestId}`);
    }

    if (params.toString()) {
      url += (url.includes('?') ? '&' : '?') + params.toString();
    }

    return url;
  }

  /**
   * üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Print Preview
   */
  createPrintPreviewUrl(filters = {}) {
    if (!this.isEnabled || !this.dashboardUrl) {
      return null;
    }

    let url = this.dashboardUrl;
    const params = new URLSearchParams();

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö print
    params.append('print', 'true');
    params.append('format', 'pdf');
    params.append('size', 'A4');
    params.append('orientation', 'portrait');
    params.append('scale', '0.8');

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° filters
    if (filters.dateFrom) {
      params.append('config', JSON.stringify({
        'df146': `${filters.dateFrom}`,
        'df147': `${filters.dateTo || filters.dateFrom}`
      }));
    }

    if (filters.status) {
      params.append('filter', `status:${filters.status}`);
    }

    if (filters.requestId) {
      params.append('filter', `request_id:${filters.requestId}`);
    }

    if (params.toString()) {
      url += (url.includes('?') ? '&' : '?') + params.toString();
    }

    return url;
  }

  /**
   * üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
   */
  createDirectPrintUrl(filters = {}, options = {}) {
    if (!this.isEnabled || !this.dashboardUrl) {
      return null;
    }

    const printOptions = {
      format: options.format || 'pdf',
      size: options.size || 'A4',
      orientation: options.orientation || 'portrait',
      scale: options.scale || '0.8',
      download: options.download !== false ? 'true' : 'false',
      filename: options.filename || `‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤_${new Date().toISOString().split('T')[0]}`
    };

    let url = this.dashboardUrl;
    const params = new URLSearchParams();

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
    Object.entries(printOptions).forEach(([key, value]) => {
      params.append(key, value);
    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° filters
    if (filters.dateFrom) {
      params.append('config', JSON.stringify({
        'df146': `${filters.dateFrom}`,
        'df147': `${filters.dateTo || filters.dateFrom}`
      }));
    }

    if (filters.status) {
      params.append('filter', `status:${filters.status}`);
    }

    if (filters.requestId) {
      params.append('filter', `request_id:${filters.requestId}`);
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° action ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
    params.append('action', 'export');

    if (params.toString()) {
      url += (url.includes('?') ? '&' : '?') + params.toString();
    }

    return url;
  }

  /**
   * üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå
   */
  createDocumentPreviewUrl(filters = {}, options = {}) {
    const previewOptions = {
      view: 'preview',
      toolbar: 'true',
      zoom: options.zoom || '100',
      ...options
    };

    let url = this.createEmbedUrl(filters);
    if (!url) return null;

    const params = new URLSearchParams();
    Object.entries(previewOptions).forEach(([key, value]) => {
      params.append(key, value);
    });

    url += (url.includes('?') ? '&' : '?') + params.toString();
    return url;
  }

  /**
   * üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Print Modal ‡πÉ‡∏ô Admin Dashboard
   */
  createPrintModalData(type = 'general', filters = {}) {
    const reportConfigs = {
      general: {
        title: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ - ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤',
        description: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        icon: 'üìä'
      },
      today: {
        title: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
        description: `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${new Date().toLocaleDateString('th-TH')}`,
        icon: 'üìà'
      },
      thisWeek: {
        title: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
        description: '‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ',
        icon: 'üìÖ'
      },
      thisMonth: {
        title: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
        description: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
        icon: 'üìÜ'
      },
      pending: {
        title: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
        description: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
        icon: '‚è≥'
      },
      inProgress: {
        title: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
        description: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°',
        icon: 'üîß'
      },
      completed: {
        title: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
        description: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
        icon: '‚úÖ'
      },
      custom: {
        title: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á',
        description: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î',
        icon: 'üéØ'
      }
    };

    const config = reportConfigs[type] || reportConfigs.general;

    return {
      ...config,
      embedUrl: this.createEmbedUrl(filters),
      previewUrl: this.createDocumentPreviewUrl(filters),
      printUrl: this.createDirectPrintUrl(filters),
      printPreviewUrl: this.createPrintPreviewUrl(filters),
      filters: filters,
      isEnabled: this.isEnabled
    };
  }

  /**
   * ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå Dashboard ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Telegram
   */
  getDashboardLinkForTelegram(type = 'general', filters = {}) {
    const urls = {
      general: this.createDashboardUrl(),
      today: this.createDashboardUrl({
        dateFrom: new Date().toISOString().split('T')[0],
        dateTo: new Date().toISOString().split('T')[0]
      }),
      thisWeek: this.createDashboardUrl({
        dateFrom: this.getWeekStart().toISOString().split('T')[0],
        dateTo: new Date().toISOString().split('T')[0]
      }),
      thisMonth: this.createDashboardUrl({
        dateFrom: this.getMonthStart().toISOString().split('T')[0],
        dateTo: new Date().toISOString().split('T')[0]
      }),
      pending: this.createDashboardUrl({ status: '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' }),
      inProgress: this.createDashboardUrl({ status: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' }),
      completed: this.createDashboardUrl({ status: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' }),
      custom: this.createDashboardUrl(filters)
    };

    return urls[type] || urls.general;
  }

  /**
   * üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á Print Instructions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin
   */
  createPrintInstructions() {
    return {
      steps: [
        'üñ±Ô∏è ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå',
        'üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
        'üñ®Ô∏è ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡∏û‡∏¥‡∏°‡∏û‡πå" ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ Ctrl+P',
        '‚öôÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤',
        '‚úÖ ‡∏Å‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£'
      ],
      tips: [
        'üí° ‡πÉ‡∏ä‡πâ Chrome ‡∏´‡∏£‡∏∑‡∏≠ Edge ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î',
        'üìÑ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏© A4 ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á',
        'üé® ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏µ" ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≤‡∏ü‡∏™‡∏µ‡∏™‡∏±‡∏ô',
        'üíæ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô PDF" ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏î‡πâ'
      ],
      troubleshooting: [
        {
          problem: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
          solution: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤'
        },
        {
          problem: '‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏´‡∏ô‡πâ‡∏≤',
          solution: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á" ‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå'
        },
        {
          problem: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
          solution: '‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ'
        }
      ]
    };
  }

  /**
   * ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Telegram ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå Dashboard
   */
  createTelegramMessageWithDashboard(message, dashboardType = 'general', filters = {}) {
    if (!this.isEnabled) {
      return message;
    }

    const dashboardUrl = this.getDashboardLinkForTelegram(dashboardType, filters);
    if (!dashboardUrl) {
      return message;
    }

    const dashboardTexts = {
      general: 'üìä ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      today: 'üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ',
      thisWeek: 'üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ',
      thisMonth: 'üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ',
      pending: '‚è≥ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
      inProgress: 'üîß ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
      completed: '‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
      custom: 'üìä ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô'
    };

    const linkText = dashboardTexts[dashboardType] || dashboardTexts.general;

    return `${message}

üîó [${linkText}](${dashboardUrl})`;
  }

  /**
   * ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå Dashboard
   */
  async createDashboardSummaryReport(type = 'daily') {
    try {
      const summary = await googleSheetsService.getRepairRequestsSummary();
      const today = new Date().toLocaleDateString('th-TH');
      
      let reportMessage = '';
      let dashboardType = 'general';

      switch (type) {
        case 'daily':
          reportMessage = `üìä *‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô*
üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${today}

üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
‚Ä¢ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${summary.total} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${summary.pending} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${summary.inProgress} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${summary.completed} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å: ${summary.cancelled} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
          dashboardType = 'today';
          break;

        case 'weekly':
          reportMessage = `üìä *‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå*
üìÖ ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà ${this.getWeekNumber()}

üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
‚Ä¢ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${summary.total} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${summary.pending} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${summary.inProgress} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${summary.completed} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
          dashboardType = 'thisWeek';
          break;

        case 'monthly':
          const monthName = new Date().toLocaleDateString('th-TH', { month: 'long', year: 'numeric' });
          reportMessage = `üìä *‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô*
üìÖ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ${monthName}

üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
‚Ä¢ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${summary.total} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${summary.pending} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${summary.inProgress} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${summary.completed} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
          dashboardType = 'thisMonth';
          break;
      }

      return this.createTelegramMessageWithDashboard(reportMessage, dashboardType);
    } catch (error) {
      console.error('Error creating dashboard summary report:', error);
      return `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: ${error.message}`;
    }
  }

  /**
   * ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° Dashboard link
   */
  createNewRequestNotificationWithDashboard(requestData) {
    const baseMessage = this.formatNewRequestMessage(requestData);
    return this.createTelegramMessageWithDashboard(baseMessage, 'today');
  }

  /**
   * ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏° Dashboard link
   */
  createStatusUpdateNotificationWithDashboard(requestData, newStatus, technicianNotes) {
    const baseMessage = this.formatStatusUpdateMessage(requestData, newStatus, technicianNotes);
    const dashboardType = this.getDashboardTypeByStatus(newStatus);
    return this.createTelegramMessageWithDashboard(baseMessage, dashboardType);
  }

  /**
   * ‚úÖ Helper functions
   */
  formatNewRequestMessage(requestData) {
    const personalInfo = requestData.personalDetails ? 
      `üë§ ‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á: ${this.escapeMarkdown(requestData.personalDetails.prefix || '')}${this.escapeMarkdown(requestData.personalDetails.firstName || '')} ${this.escapeMarkdown(requestData.personalDetails.lastName || '')} (${this.escapeMarkdown(requestData.lineDisplayName)})
üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${this.escapeMarkdown(requestData.personalDetails.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}
üéÇ ‡∏≠‡∏≤‡∏¢‡∏∏: ${requestData.personalDetails.age ? `${this.escapeMarkdown(requestData.personalDetails.age)} ‡∏õ‡∏µ` : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
üåè ‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏ä‡∏≤‡∏ï‡∏¥: ${this.escapeMarkdown(requestData.personalDetails.ethnicity || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}
üè≥Ô∏è ‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥: ${this.escapeMarkdown(requestData.personalDetails.nationality || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}
üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${requestData.personalDetails.houseNo ? `‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ${this.escapeMarkdown(requestData.personalDetails.houseNo)}, ${this.escapeMarkdown(requestData.personalDetails.moo)}` : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}` :
      `üë§ ‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á: ${this.escapeMarkdown(requestData.lineDisplayName)} (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß)`;

    return `üÜï *‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÉ‡∏´‡∏°‡πà*

üé´ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: *${this.escapeMarkdown(requestData.requestId)}*
${personalInfo}
üóº ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏™‡∏≤: ${this.escapeMarkdown(requestData.poleId || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}
üìç ‡∏û‡∏¥‡∏Å‡∏±‡∏î: ${requestData.latitude && requestData.longitude ? `${requestData.latitude}, ${requestData.longitude}` : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
‚ö†Ô∏è ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ${this.escapeMarkdown(requestData.problemDescription)}
üì∏ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ${requestData.photoBase64 ? '‡∏°‡∏µ' : '‡πÑ‡∏°‡πà‡∏°‡∏µ'}

üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á: ${this.escapeMarkdown(requestData.dateReported)}`;
  }

  formatStatusUpdateMessage(requestData, newStatus, technicianNotes) {
    const statusEmoji = {
      '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': '‚è≥',
      '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡∏ä‡πà‡∏≤‡∏á': '‚úÖ',
      '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': 'üîß',
      '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô': '‚úÖ',
      '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£': '‚ùå',
      '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å': 'üö´'
    };

    const safePersonName = `${this.escapeMarkdown(requestData.TITLE_PREFIX || '')}${this.escapeMarkdown(requestData.FIRST_NAME || '')} ${this.escapeMarkdown(requestData.LAST_NAME || '')}`.trim();
    const safePhone = this.escapeMarkdown(requestData.PHONE || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏');
    const safeHouseAddress = requestData.HOUSE_NO ? 
        `‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ${this.escapeMarkdown(requestData.HOUSE_NO)}, ‡∏´‡∏°‡∏π‡πà ${this.escapeMarkdown(requestData.MOO)}` : 
        '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const safePoleId = this.escapeMarkdown(requestData.POLE_ID || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏');
    const safeStatus = this.escapeMarkdown(newStatus);
    const safeRequestId = this.escapeMarkdown(requestData.REQUEST_ID);
    const safeTechnicianNotes = technicianNotes ? this.escapeMarkdown(technicianNotes) : '';

    return `${statusEmoji[newStatus] || 'üîÑ'} *‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°*

üé´ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: *${safeRequestId}*
üë§ ‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á: ${safePersonName}
üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${safePhone}
üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${safeHouseAddress}
üóº ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏™‡∏≤: ${safePoleId}

üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà: *${safeStatus}*
${safeTechnicianNotes ? `üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ${safeTechnicianNotes}\n` : ''}
üìÖ ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: ${new Date().toLocaleString('th-TH', { timeZone: config.TIMEZONE })}`;
  }

  getDashboardTypeByStatus(status) {
    const statusMapping = {
      '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': 'pending',
      '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡∏ä‡πà‡∏≤‡∏á': 'pending',
      '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': 'inProgress',
      '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô': 'completed',
      '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£': 'pending',
      '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å': 'general'
    };
    return statusMapping[status] || 'general';
  }

  escapeMarkdown(text) {
    if (!text || typeof text !== 'string') return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    return text.replace(/[_*[\]()~`>#+=|{}.!-]/g, '\\$&');
  }

  getWeekStart() {
    const now = new Date();
    const start = new Date(now);
    start.setDate(now.getDate() - now.getDay());
    start.setHours(0, 0, 0, 0);
    return start;
  }

  getMonthStart() {
    const now = new Date();
    return new Date(now.getFullYear(), now.getMonth(), 1);
  }

  getWeekNumber() {
    const now = new Date();
    const start = new Date(now.getFullYear(), 0, 1);
    const diff = now - start;
    const oneWeek = 1000 * 60 * 60 * 24 * 7;
    return Math.ceil(diff / oneWeek);
  }

  /**
   * ‚úÖ Health Check
   */
  healthCheck() {
    return {
      isEnabled: this.isEnabled,
      dashboardUrl: this.dashboardUrl ? '‚úÖ ‡∏°‡∏µ' : '‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ',
      embedUrl: this.embedUrl ? '‚úÖ ‡∏°‡∏µ' : '‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ',
      printingSupported: this.isEnabled && (this.dashboardUrl || this.embedUrl) ? '‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö' : '‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö',
      features: {
        dashboard: '‚úÖ ‡∏î‡∏π Dashboard',
        embed: '‚úÖ ‡∏ù‡∏±‡∏á‡πÉ‡∏ô Admin',
        print: '‚úÖ ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
        preview: '‚úÖ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå',
        telegram: '‚úÖ ‡πÅ‡∏ä‡∏£‡πå‡∏ú‡πà‡∏≤‡∏ô Telegram'
      }
    };
  }
}

module.exports = new LookerStudioService();